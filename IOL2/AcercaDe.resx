<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>